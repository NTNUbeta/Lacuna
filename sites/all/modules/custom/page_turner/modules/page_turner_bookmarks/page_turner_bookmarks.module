<?php
/**
 * @file
 *
 * Allow book marking of Page Turner pages
 *
 * Mike Widner <mikewidner@stanford.edu>
 *
 **/

/*
 * Plan: because flags are per-entity, but we can save values
 * use the values per entity, per user to store which page(s)
 * have been bookmarked and to remove those bookmarks, when needed
 * see: https://www.drupal.org/node/1748148#write-flagging-fields
 * Example of multiple bookmarked pages in one node:
 * $flagging->{'page'}['und'][0]['value'] = 1
 * $flagging->{'page'}['und'][1]['value'] = 7
 */

define("PAGE_TURNER_BOOKMARK_FLAG", 'page_turner_bookmark'); // for consistency

/**
 * Implements hook_menu().
 */
function page_turner_bookmarks_menu() {
  $items = array();
//  $content_types = variable_get('page_turner_node_types');
//  foreach ($content_types as $key => $value) {
//    // Expose button to page
//    if (!$value) {
//      $items[$key] = array(
//        'page callback' => 'page_turner_bookmark_ajax',
//        'type' => MENU_CALLBACK,
//      );
//    }
//  }

  $items['admin/user-interface/page-turner/bookmark/add'] = array(
    'page callback' => 'page_turner_bookmark_add',
    'access arguments' => 'flag page_turner_bookmark',
    'type' => MENU_CALLBACK,
    );
  $items['admin/user-interface/page-turner/bookmark/remove'] = array(
    'page callback' => 'page_turner_bookmark_remove',
    'access arguments' => 'unflag page_turner_bookmark',
    'type' => MENU_CALLBACK,
    );
  return $items;
}

/*
 * Helper function: gets bookmark page ranges for current node
 */
function page_turner_bookmark_pages_load($node) {
	global $user;
	$flag = flag_get_user_flags('node', $node->nid);
	$pages = array();
//	if ($bookmarks && $bookmarks->is_flagged($node->nid, $user->uid)) {
//		if (isset($bookmarks->pages)) {
//			$pages = $bookmarks->pages[LANGUAGE_NONE];
//		}
//	}
	return $pages;
}

/**
 * AJAX callback
 * Creates commands for (un)bookmarking
 */
//function page_turner_bookmark_ajax() {
//  $commands = array();
//
//  $selector = '#page-turner-bookmark';
//  $html = "";
//  print ajax_render($commands);
//  drupal_exit();
//}

/**
 * Menu callback
 *
 * Return list of current user's bookmarks
 */
//function page_turner_bookmark_list($type, $id) {
//	$source = drupal_lookup_path('source', $type . '/' . $id);
//	$node = menu_get_object('node', 1, $source);
//  $bookmarks = page_turner_bookmark_pages_load($node);
//	drupal_json_output($bookmarks);
//}

/**
 * Menu callback
 *
 * Creates a new bookmark for the selected page(s)
 **/
function page_turner_bookmark_add() {
	global $user;
	$pages = $_POST['pages'];
	$path = drupal_lookup_path('source', $_POST['path']);
	$node = menu_get_object($type = 'node', $position = 1, $path);
	$bookmark_flag = flag_get_flag(PAGE_TURNER_BOOKMARK_FLAG);
	$flag = flag_get_user_flags('node', $node->nid);

	if (isset($flag[PAGE_TURNER_BOOKMARK_FLAG])) {
		$flagging_wrapper = entity_metadata_wrapper('flagging', $flag[PAGE_TURNER_BOOKMARK_FLAG]->flagging_id);
	} else {
		$values = array(
			'flag_name' => PAGE_TURNER_BOOKMARK_FLAG,
			'fid' => $bookmark_flag->fid,
			'entity_type' => 'node',
			'entity_id' => $node->nid,
		);
		ddl('creating new');
		$flagging = entity_create('flagging', $values);
		$flagging_wrapper = entity_metadata_wrapper('flagging', $flagging);
	}

	$flagging_wrapper->field_page_start[] = $pages['start'];
	$flagging_wrapper->field_page_end[] = $pages['end'];

	if (!isset($flagging)) {
		// Update existing bookmark flag
		$flagging_wrapper->save();
	} else {
		// New bookmark flag
		$bookmark_flag->flag('flag', $node->nid, NULL, FALSE, $flagging);
	}
}

/**
 * Menu callback
 *
 * Removes existing bookmark for the selected page(s)
 **/
function page_turner_bookmark_remove() {
	// TODO: Delete bookmark flag
}

/**
 * Implements hook_node_view()
 */
function page_turner_bookmarks_node_view($node, $view_mode, $langcode) {
	// Load the JS, but in the same group as our parent module and
	// AFTER it's done loading (for events)
	$bookmarks = page_turner_bookmark_pages_load($node);
	drupal_add_js(array('page_turner_bookmarks' => $bookmarks), 'setting');
	drupal_add_js(drupal_get_path('module', 'page_turner_bookmarks') . '/js/page_turner_bookmarks.js', array('group' => 'page_turner', 'weight' => 10));
}
