<?php

/**
 * @param $og_membership
 *
 * When a new user joins a course group, create new private group(s)
 * for instructor->student private annotations
 */
function lacuna_private_feedback_og_membership_insert($og_membership) {
  global $user;

  $group = node_load($og_membership->gid);
  // Only trigger when somebody joins a course
  if ($group->type != 'course') {
    return;
  }

  $members = og_get_group_members_properties($group, array(), 'members', 'node');

  $instructors = array(); // instructors are group admins
  $students = array();
  foreach ($members as $uid) {
    $member = user_load($uid);
    $roles = og_get_user_roles('node', $group->nid, $uid = $member->uid);

    if (in_array(OG_ADMINISTRATOR_ROLE, $roles)) {
      $instructors[] = $member;
    } else {
      $students[] = $member;
    }
  }
  ddl($students, 'Students');
  ddl($instructors, 'Instructors');

  $rid = array_search('instructor', user_roles());
//  if (user_has_role($rid)) {
//    _lacuna_private_feedback_add_new_instructor($user, $students);
//  } else {
//    _lacuna_private_feedback_add_new_student($user, $instructors);
//  }

}

/**
 * @param $og_membership
 *
 * Also update private feedback groups if a user gets promoted to admin role
 */
function lacuna_private_feedback_og_membership_update($og_membership) {

}


function _lacuna_private_feedback_create_new_group() {
  global $user;
  $values = array(
    'type' => 'peer_group',
    'uid' => $user->uid,
    'status' => 1,
    'comment' => 0,
    'promote' => 0,
    'group_access' => 0, // make it a private group
    'field_private_feedback' => 1 // mark it as a private feedback group
  );

  $entity = entity_create('node', $values);
  $wrapper = entity_metadata_wrapper('node', $entity);
  $wrapper->title->set('Private Feedback Group for ' . $user->name);
  $wrapper->save();
  return $wrapper;
}


function _lacuna_private_feedback_get_instructors($group) {

}


function _lacuna_private_feedback_add_new_student($student,
                                                        $instructors) {
  $group_wrapper = _lacuna_private_feedback_create_new_group();
  og_group('peer_group', $group_wrapper->nid);


}


function _lacuna_private_feedback_add_new_instructor($instructor,
  $students) {
  // Find existing private feedback peer groups with student as member

}